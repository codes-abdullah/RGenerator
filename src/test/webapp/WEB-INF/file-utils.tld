<?xml version="1.0" encoding="UTF-8"?>
<taglib
	xsi:schemaLocation="
            http://java.sun.com/xml/ns/javaee 
            http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.1">
	<tlib-version>1.0</tlib-version>
	<short-name>StivloTags</short-name>
	<uri>http://www.stefanolocati.it/</uri>


	<tag>
		<description>Read Text/Serializable file as [String, List&lt;String&gt;, Serializable or SQL script]</description>
		<name>read</name>
		<tag-class>codes.abdullah.web.jsp.tags.FileReaderTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<description>Specify file path, should depend on [type] attribute</description>
			<name>path</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>
	  Specify the type of the path [real, absolute or resource], default:
	  real&lt;br&gt;
	  real: use ServletContext.getRealPath(String)&lt;br&gt;
	  absolute: use as it is&lt;br&gt;
	  resource: use Class.getResource(String)&lt;br&gt; </description>
			<name>type</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>Define variable name</description>
			<name>var</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>Set variable name to scope (page, request, session or application), default: page</description>
			<name>scope</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<description>Read file as [string, list, serializable or sql script], default: string&lt;br&gt;
string: stored as String&lt;br&gt;
list: stored as List&lt;String&gt;&lt;br&gt;
serializable: stored as Serializable&lt;br&gt;
sql: stored as sql script, this will use ScriptRunner.loadResourceSqlFile, which will load any sub-sql files 
</description>
			<name>as</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>

		<attribute>
			<description>Specify what to do if exception occurred during reading file [throw or ignore], default: throw</description>
			<name>onException</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>

	</tag>


	<tag>
		<description>Write [string, list or serializable] to file</description>
		<name>write</name>
		<tag-class>codes.abdullah.web.jsp.tags.FileWriterTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<description>Specify file path</description>
			<name>path</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>Specify the type of the path [real, absolute or resource], default:
	  real&lt;br&gt;
	  real: use ServletContext.getRealPath(String)&lt;br&gt;
	  absolute: use as it is&lt;br&gt;
	  resource: throws UnsupportedOperationException(String)&lt;br&gt;</description>
			<name>type</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>Search for this variable name in scopes.&lt;br&gt;Supported objects are&lt;br&gt;[String, List&lt;String&gt; and Serializable])</description>
			<name>var</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>Append to file if exists, default: false</description>
			<name>append</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<description>Specify what to do if exception occurred during reading file [throw or ignore], default: throw</description>
			<name>onException</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>

	</tag>

	<tag>
		<description>
		Resolve path against servlet real-path or context-path, 
		and (optionally) set it to given var in specific scope. 
		Note: html does supports nested Markup Language elements, 
		so using this element inside html elements will work, but, 
		JSP-JSTL does not supports nested elements, so this will not work: &lt;c:out value='&lt;f:path var="mypath"  context="context-path.html'/&gt;"&gt; </description>
		<name>path</name>
		<tag-class>codes.abdullah.web.jsp.tags.PathResolverTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<description>
			A real path in file system.&lt;br&gt; 
			ServletContext.getRealPath(String);
			</description>
			<name>real</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>
			A context path to current url. &lt;br&gt;
			ServletContext().getContextPath() + "/" + path;
			</description>
			<name>context</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>(Optional) Assign resolve path to given path (supports run-time-expression-value).</description>
			<name>var</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>(Optional) Scope for var. default: page-scope</description>
			<name>scope</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
	</tag>

	<tag>
		<description>Read (.css.el) file from real-path, 
		resolve all EL variables ${VAR}, write the resolved back as (.css) file, 
		and replace this &lt;f:css&gt; tag with 
		&lt;link&gt; tag using same path.&lt;br&gt;
		This is a runtime ops, so the if the input (.css.el) has more length then  the output
		(.css), will cause the browser not completed transmit error, so will fill up
		 the difference using linefeeds</description>
		<name>css</name>
		<tag-class>codes.abdullah.web.jsp.tags.CssElResolverTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<description>real path to .css.el file
			</description>
			<name>path</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>

		<attribute>
			<description>if variable name is not set, 
			JSP-EL by default will fill it by empty string, 
			but this tag will throw a null-pointer-exception for a non-set names, 
			to disable this, set this attribute to true 
			</description>
			<name>nullSafe</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>


</taglib>